"""empty message

Revision ID: f94b93d0a4bb
Revises: 
Create Date: 2021-05-22 23:17:49.995552

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f94b93d0a4bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('middle_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_actor'))
    )
    op.create_table('art',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('artist', sa.Text(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_art'))
    )
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('middle_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_author'))
    )
    op.create_table('reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.Text(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reference'))
    )
    op.create_table('tag_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag_type'))
    )
    op.create_table('universe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_universe'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('actor_refs',
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], name=op.f('fk_actor_refs_actor_id_actor')),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], name=op.f('fk_actor_refs_reference_id_reference'))
    )
    op.create_table('art_refs',
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('art_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], name=op.f('fk_art_refs_art_id_art')),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], name=op.f('fk_art_refs_reference_id_reference'))
    )
    op.create_table('series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], name=op.f('fk_series_universe_id_universe')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_series'))
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('tag_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_type_id'], ['tag_type.id'], name=op.f('fk_tag_tag_type_id_tag_type')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag'))
    )
    op.create_table('actor_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], name=op.f('fk_actor_tags_actor_id_actor')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_actor_tags_tag_id_tag'))
    )
    op.create_table('art_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('art_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], name=op.f('fk_art_tags_art_id_art')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_art_tags_tag_id_tag'))
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('coauthor_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], name=op.f('fk_book_author_id_author')),
    sa.ForeignKeyConstraint(['coauthor_id'], ['author.id'], name=op.f('fk_book_coauthor_id_author')),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], name=op.f('fk_book_series_id_series')),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], name=op.f('fk_book_universe_id_universe')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book'))
    )
    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['character.id'], name=op.f('fk_character_parent_id_character')),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], name=op.f('fk_character_series_id_series')),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], name=op.f('fk_character_universe_id_universe')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_character'))
    )
    op.create_table('series_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], name=op.f('fk_series_tags_series_id_series')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_series_tags_tag_id_tag'))
    )
    op.create_table('universe_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_universe_tags_tag_id_tag')),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], name=op.f('fk_universe_tags_universe_id_universe'))
    )
    op.create_table('appearances',
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('fk_appearances_book_id_book')),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], name=op.f('fk_appearances_character_id_character'))
    )
    op.create_table('book_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('fk_book_tags_book_id_book')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_book_tags_tag_id_tag'))
    )
    op.create_table('character_refs',
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], name=op.f('fk_character_refs_character_id_character')),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], name=op.f('fk_character_refs_reference_id_reference'))
    )
    op.create_table('character_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], name=op.f('fk_character_tags_character_id_character')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_character_tags_tag_id_tag'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('character_tags')
    op.drop_table('character_refs')
    op.drop_table('book_tags')
    op.drop_table('appearances')
    op.drop_table('universe_tags')
    op.drop_table('series_tags')
    op.drop_table('character')
    op.drop_table('book')
    op.drop_table('art_tags')
    op.drop_table('actor_tags')
    op.drop_table('tag')
    op.drop_table('series')
    op.drop_table('art_refs')
    op.drop_table('actor_refs')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('universe')
    op.drop_table('tag_type')
    op.drop_table('reference')
    op.drop_table('author')
    op.drop_table('art')
    op.drop_table('actor')
    # ### end Alembic commands ###
