"""empty message

Revision ID: 78bfeb2fe494
Revises: 466b793516c3
Create Date: 2021-05-21 02:14:02.472315

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '78bfeb2fe494'
down_revision = '466b793516c3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actor_refs',
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('art_refs',
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('art_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('art_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('art_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('series_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('series_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('universe_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], )
    )
    op.create_table('book_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('character_refs',
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('character_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.drop_table('series_tag')
    op.drop_table('art_ref')
    op.drop_table('book_tag')
    op.drop_table('art_tag')
    op.drop_table('universe_tag')
    op.drop_table('character_tag')
    op.drop_table('actor_ref')
    op.drop_table('character_ref')
    op.add_column('actor', sa.Column('middle_name', sa.Text(), nullable=True))
    op.add_column('author', sa.Column('middle_name', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('author', 'middle_name')
    op.drop_column('actor', 'middle_name')
    op.create_table('character_ref',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('character_id', sa.INTEGER(), nullable=True),
    sa.Column('reference_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actor_ref',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('actor_id', sa.INTEGER(), nullable=True),
    sa.Column('reference_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actor.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_tag',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('character_id', sa.INTEGER(), nullable=True),
    sa.Column('tag_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('universe_tag',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=True),
    sa.Column('tag_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('art_tag',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('art_id', sa.INTEGER(), nullable=True),
    sa.Column('tag_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_tag',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('book_id', sa.INTEGER(), nullable=True),
    sa.Column('tag_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('art_ref',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('art_id', sa.INTEGER(), nullable=True),
    sa.Column('reference_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['art_id'], ['art.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('series_tag',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('series_id', sa.INTEGER(), nullable=True),
    sa.Column('tag_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('character_tags')
    op.drop_table('character_refs')
    op.drop_table('book_tags')
    op.drop_table('universe_tags')
    op.drop_table('series_tags')
    op.drop_table('art_tags')
    op.drop_table('art_refs')
    op.drop_table('actor_refs')
    # ### end Alembic commands ###
